{"ast":null,"code":"var _jsxFileName = \"D:\\\\etuds ofppt\\\\2_anne\\\\Devlop_frontend\\\\fahmReact\\\\pratiqueFhm\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react'\n// import { useState } from 'react'\n// export default function App() {\n//   const Comptes=[\n//     {num:1,nom:\"Ali\",solde:18000,operatios:[\n//       {type:\"Credit\",montant:10000},{type:\"Debit\",montant:8000}]},\n//     {num:2,nom:\"Sarah\",solde:45000,operatios:[\n//         {type:\"Credit\",montant:10000},{type:\"Debit\",montant:2000}]},\n//   ]\n//   const[idOp,setIdOp]=useState()\n//   const[compt,setCompt]=useState()\n//   const[Montant,setMontant]=useState()\n//   function handleChercher(){\n//     setCompt(Comptes.find((f)=>f.num==idOp))\n//   }\n//   function Crediter(i){\n//     alert(compt.find((f)=>f.num==i))\n//     compt.operatios.push({type:'Credit',montant:Montant})\n//     setCompt((prev)=>({...prev,operatios:compt.operatios}))\n//   }\n//   // function calcSold(){\n//   // }\n//   return (\n//     <div>\n//       no Compte <input type='text' onChange={(e)=>setIdOp(e.target.value)}/>\n//       <button onClick={handleChercher}>Rechercher</button> <br/>\n//       Marque: <b>{compt?compt.nom:''}</b><br/>\n//       Nombre de verres: <b>{compt?compt.solde:''}</b><br/>\n//       Montant operation <input type='text' onChange={(e)=>setMontant(e.target.value)}/>\n//       <button onClick={()=>Crediter(compt.num)}>Crediter</button>\n//       <button>Debiter</button><br/>\n//       <table>\n//         <tr>\n//           <th>Type operation</th>\n//           <th>Montant</th>\n//         </tr>\n//         {compt&&compt.operatios.map((r,indx)=>{\n//           return <tr key={indx}>\n//             <td>{r.type}</td>\n//             <td>{r.montant}</td>\n//           </tr>\n//         })}\n//       </table>\n//     </div>\n//   )\n// }\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comptes(_ref) {\n  _s();\n\n  let {\n    comptes\n  } = _ref;\n  const [search, setSearch] = useState(\"\");\n\n  const handleSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Rechercher un compte\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Rechercher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), comptes.filter(compte => compte.nom.toLowerCase().includes(search.toLowerCase())).map(compte => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Compte \", compte.num]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nom : \", compte.nom]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Solde : \", compte.solde]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Op\\xE9rations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: compte.operations.map(operation => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [operation.type, \" : \", operation.montant]\n        }, operation.type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, compte.num, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comptes, \"42GASUL8pX2/N6Oh5HTh0GvQEF0=\");\n\n_c = Comptes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comptes\");","map":{"version":3,"names":["React","useState","Comptes","comptes","search","setSearch","handleSearch","e","target","value","filter","compte","nom","toLowerCase","includes","map","num","solde","operations","operation","type","montant"],"sources":["D:/etuds ofppt/2_anne/Devlop_frontend/fahmReact/pratiqueFhm/src/App.js"],"sourcesContent":["// import React from 'react'\r\n// import { useState } from 'react'\r\n\r\n// export default function App() {\r\n//   const Comptes=[\r\n//     {num:1,nom:\"Ali\",solde:18000,operatios:[\r\n//       {type:\"Credit\",montant:10000},{type:\"Debit\",montant:8000}]},\r\n//     {num:2,nom:\"Sarah\",solde:45000,operatios:[\r\n//         {type:\"Credit\",montant:10000},{type:\"Debit\",montant:2000}]},\r\n//   ]\r\n//   const[idOp,setIdOp]=useState()\r\n//   const[compt,setCompt]=useState()\r\n//   const[Montant,setMontant]=useState()\r\n\r\n//   function handleChercher(){\r\n//     setCompt(Comptes.find((f)=>f.num==idOp))\r\n//   }\r\n\r\n//   function Crediter(i){\r\n//     alert(compt.find((f)=>f.num==i))\r\n//     compt.operatios.push({type:'Credit',montant:Montant})\r\n//     setCompt((prev)=>({...prev,operatios:compt.operatios}))\r\n    \r\n  \r\n    \r\n//   }\r\n\r\n//   // function calcSold(){\r\n\r\n//   // }\r\n\r\n//   return (\r\n//     <div>\r\n//       no Compte <input type='text' onChange={(e)=>setIdOp(e.target.value)}/>\r\n//       <button onClick={handleChercher}>Rechercher</button> <br/>\r\n//       Marque: <b>{compt?compt.nom:''}</b><br/>\r\n//       Nombre de verres: <b>{compt?compt.solde:''}</b><br/>\r\n//       Montant operation <input type='text' onChange={(e)=>setMontant(e.target.value)}/>\r\n//       <button onClick={()=>Crediter(compt.num)}>Crediter</button>\r\n//       <button>Debiter</button><br/>\r\n//       <table>\r\n//         <tr>\r\n//           <th>Type operation</th>\r\n//           <th>Montant</th>\r\n//         </tr>\r\n//         {compt&&compt.operatios.map((r,indx)=>{\r\n//           return <tr key={indx}>\r\n//             <td>{r.type}</td>\r\n//             <td>{r.montant}</td>\r\n//           </tr>\r\n//         })}\r\n//       </table>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Comptes({ comptes }) {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const handleSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Rechercher un compte\"\r\n        value={search}\r\n        onChange={handleSearch}\r\n      />\r\n      <button>Rechercher</button>\r\n      {comptes\r\n        .filter((compte) =>\r\n          compte.nom.toLowerCase().includes(search.toLowerCase())\r\n        )\r\n        .map((compte) => (\r\n          <div key={compte.num}>\r\n            <h2>Compte {compte.num}</h2>\r\n            <p>Nom : {compte.nom}</p>\r\n            <p>Solde : {compte.solde}</p>\r\n            <h3>Op√©rations</h3>\r\n            <ul>\r\n              {compte.operations.map((operation) => (\r\n                <li key={operation.type}>\r\n                  {operation.type} : {operation.montant}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,OAAT,OAA8B;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC5B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;;EAEA,MAAMK,YAAY,GAAIC,CAAD,IAAO;IAC1BF,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,sBAFd;MAGE,KAAK,EAAEL,MAHT;MAIE,QAAQ,EAAEE;IAJZ;MAAA;MAAA;MAAA;IAAA,QADF,eAOE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF,EAQGH,OAAO,CACLO,MADF,CACUC,MAAD,IACNA,MAAM,CAACC,GAAP,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCV,MAAM,CAACS,WAAP,EAAlC,CAFH,EAIEE,GAJF,CAIOJ,MAAD,iBACH;MAAA,wBACE;QAAA,sBAAYA,MAAM,CAACK,GAAnB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,qBAAUL,MAAM,CAACC,GAAjB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,uBAAYD,MAAM,CAACM,KAAnB;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA,UACGN,MAAM,CAACO,UAAP,CAAkBH,GAAlB,CAAuBI,SAAD,iBACrB;UAAA,WACGA,SAAS,CAACC,IADb,SACsBD,SAAS,CAACE,OADhC;QAAA,GAASF,SAAS,CAACC,IAAnB;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QALF;IAAA,GAAUT,MAAM,CAACK,GAAjB;MAAA;MAAA;MAAA;IAAA,QALH,CARH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;GArCQd,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}