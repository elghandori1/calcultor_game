{"ast":null,"code":"var _jsxFileName = \"D:\\\\etuds ofppt\\\\2_anne\\\\Devlop_frontend\\\\fahmReact\\\\pratiqueFhm\\\\src\\\\components\\\\Q6.js\",\n    _s = $RefreshSig$();\n\n// React\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Q6 = props => {\n  _s();\n\n  // Tout les pays du store\n  const {\n    pays\n  } = props; // Continent\n\n  const continents = pays.map(p => p.continent); // Continent unique\n\n  const continentsUnique = continents.reduce((array, curr) => {\n    if (!array.includes(curr)) {\n      array.push(curr);\n    }\n\n    return array;\n  }, []);\n  const [population, setPopulation] = useState(1000000);\n  const [continent, setContinent] = useState(\"all\");\n  const [paysFiltres, setPaysFiltres] = useState([]);\n  useEffect(() => {\n    setPaysFiltres(pays.sort((a, b) => b.population - a.population).filter(p => {\n      return p.population >= population && (continent === \"all\" || p.continent === continent);\n    }));\n  }, [population, continent, pays]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex justify-content-center w-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filtrer les pays\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"population\",\n            children: \"Population\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"population\",\n            id: \"population\",\n            placeholder: \"Population minimum\",\n            className: \"form-control\",\n            value: population,\n            onChange: e => {\n              setPopulation(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"continent\",\n            children: \"Continent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            defaultValue: \"all\",\n            name: \"continent\",\n            className: \"form-control\",\n            onChange: e => {\n              setContinent(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"Tous les continents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), continentsUnique.map((c, i) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: c,\n                children: c\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-center\",\n          children: [paysFiltres.length, \" pays\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table border table-striped table-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Superficie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Continent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Population\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Capitale\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: paysFiltres.length > 0 ? paysFiltres.map((p, i) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: p.image,\n                    alt: p.name,\n                    width: \"50\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: p.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: p.surface\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: p.continent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: p.population > 1000000000 ? (p.population / 1000000000).toFixed(2) + \" milliards\" : p.population > 1000000 ? (p.population / 1000000).toFixed(2) + \" millions\" : p.population > 1000 ? (p.population / 1000).toFixed(2) + \" milliers\" : p.population\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: p.cities.find(c => c.capitale).name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"6\",\n                className: \"text-center\",\n                children: \"Aucun pays ne correspond \\xE0 votre recherche\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Q6, \"I/X1QovNXjOdocX9KjCo+4ijRNM=\");\n\n_c = Q6;\n\nconst mapStateToProps = state => {\n  return {\n    pays: state.pays\n  };\n};\n\nexport default connect(mapStateToProps)(Q6);\n\nvar _c;\n\n$RefreshReg$(_c, \"Q6\");","map":{"version":3,"names":["useEffect","useState","connect","Q6","props","pays","continents","map","p","continent","continentsUnique","reduce","array","curr","includes","push","population","setPopulation","setContinent","paysFiltres","setPaysFiltres","sort","a","b","filter","e","target","value","c","i","length","image","name","surface","toFixed","cities","find","capitale","mapStateToProps","state"],"sources":["D:/etuds ofppt/2_anne/Devlop_frontend/fahmReact/pratiqueFhm/src/components/Q6.js"],"sourcesContent":["// React\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nconst Q6 = (props) => {\n  // Tout les pays du store\n  const { pays } = props;\n  // Continent\n  const continents = pays.map((p) => p.continent);\n\n  // Continent unique\n  const continentsUnique = continents.reduce((array, curr) => {\n    if (!array.includes(curr)) {\n      array.push(curr);\n    }\n    return array;\n  }, []);\n\n  const [population, setPopulation] = useState(1000000);\n  const [continent, setContinent] = useState(\"all\");\n  const [paysFiltres, setPaysFiltres] = useState([]);\n\n  useEffect(() => {\n    setPaysFiltres(\n      pays\n        .sort((a, b) => b.population - a.population)\n        .filter((p) => {\n          return (\n            p.population >= population &&\n            (continent === \"all\" || p.continent === continent)\n          );\n        })\n    );\n  }, [population, continent, pays]);\n  return (\n    <>\n      <div className=\"row d-flex justify-content-center w-100\">\n        <div className=\"col-md-6\">\n          <h3>Filtrer les pays</h3>\n          <div className=\"form-group\">\n            <label htmlFor=\"population\">Population</label>\n            <input\n              type=\"number\"\n              name=\"population\"\n              id=\"population\"\n              placeholder=\"Population minimum\"\n              className=\"form-control\"\n              value={population}\n              onChange={(e) => {\n                setPopulation(e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"continent\">Continent</label>\n            <select\n              defaultValue=\"all\"\n              name=\"continent\"\n              className=\"form-control\"\n              onChange={(e) => {\n                setContinent(e.target.value);\n              }}\n            >\n              <option value=\"all\">Tous les continents</option>\n              {continentsUnique.map((c, i) => {\n                return (\n                  <option key={i} value={c}>\n                    {c}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <label className=\"text-center\">{paysFiltres.length} pays</label>\n          <table className=\"table border table-striped table-success\">\n            <thead>\n              <tr>\n                <th>Image</th>\n                <th>Nom</th>\n                <th>Superficie</th>\n                <th>Continent</th>\n                <th>Population</th>\n                <th>Capitale</th>\n              </tr>\n            </thead>\n            <tbody>\n              {paysFiltres.length > 0 ? (\n                paysFiltres.map((p, i) => {\n                  return (\n                    <tr key={i}>\n                      <td>\n                        <img src={p.image} alt={p.name} width=\"50\" />\n                      </td>\n                      <td>{p.name}</td>\n                      <td>{p.surface}</td>\n                      <td>{p.continent}</td>\n                      <td>\n                        {p.population > 1_000_000_000\n                          ? (p.population / 1_000_000_000).toFixed(2) +\n                            \" milliards\"\n                          : p.population > 1_000_000\n                          ? (p.population / 1_000_000).toFixed(2) + \" millions\"\n                          : p.population > 1_000\n                          ? (p.population / 1_000).toFixed(2) + \" milliers\"\n                          : p.population}\n                      </td>\n                      <td>{p.cities.find((c) => c.capitale).name}</td>\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td colSpan=\"6\" className=\"text-center\">\n                    Aucun pays ne correspond à votre recherche\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    pays: state.pays,\n  };\n};\n\nexport default connect(mapStateToProps)(Q6);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}