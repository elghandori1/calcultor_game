{"ast":null,"code":"// //=================Serie_Revision\n// //---------------------------ex1:\n// import { React, useState } from \"react\";\n// const trains = [\n//   {\n//     id: \"t1\",\n//     nom: \"Buraq\",\n//     villes: [\n//       { nomV: \"fes\", ordreP: 10 },\n//       { nomV: \"meknes\", ordreP: 20 },\n//     ],\n//   },\n//   {\n//     id: \"t2\",\n//     nom: \"Gazel\",\n//     villes: [\n//       { nomV: \"casa\", ordreP: 10 },\n//       { nomV: \"meknes\", ordreP: 20 },\n//     ],\n//   },\n//   {\n//     id: \"t3\",\n//     nom: \"Eagle-Wins\",\n//     villes: [\n//       { nomV: \"asfi\", ordreP: 10 },\n//       { nomV: \"meknes\", ordreP: 20 },\n//     ],\n//   },\n//   {\n//     id: \"t4\",\n//     nom: \"Fennec\",\n//     villes: [\n//       { nomV: \"laayoun\", ordreP: 10 },\n//       { nomV: \"meknes\", ordreP: 20 },\n//     ],\n//   },\n// ];\n// function App() {\n//   const [idT, setIdT] = useState();\n//   const [train, setTrain] = useState(trains);\n//   const [ajoutV,setAjoutV] = useState();\n//   function Recherche(){\n//   if(idT) setTrain(trains.find(train => train.id === idT));\n//   }\n//   function Ajouter(){\n//     if(ajoutV && train){\n//       const villeA = train.villes.push({nomV : ajoutV,\n//       orderP : train.villes[train.villes.length - 1].ordreP + 10})\n//       setTrain(prevState => ({...prevState, villeA}))\n//     }\n//   }\n//   function Supp(index){\n//     train.villes.splice(index,1);\n//     setTrain({...train, villes : train.villes})\n//   }\n//   return (\n//     <>\n//       <h1>Gestion des trajets de trains</h1>\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\n//         <label htmlFor=\"idT\">Id Train</label>\n//         <input type=\"text\"  onChange={(e) => setIdT(e.target.value)} />\n//         <button className=\"btn btn-primary\" onClick={() => Recherche(idT)}>Rechercher</button>\n//       </div>\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\n//         <label htmlFor=\"nom\">Nom</label>\n//         <input type=\"text\" readOnly value={train?train.nom:\"\"}/>\n//       </div>\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\n//         <label htmlFor=\"villeD\">Ville depart</label>\n//         <input type=\"text\" readOnly value={train.villes?train.villes[0].nomV:\"\"}/>\n//       </div>\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\n//         <label htmlFor=\"villeT\">Ville terminus</label>\n//         <input type=\"text\" readOnly value={train.villes?train.villes[train.villes.length - 1].nomV:\"\"}/>\n//       </div>\n//       <div className=\"d-flex  justify-content-between w-50 m-5 text-center\">\n//         <label htmlFor=\"nvV\">Nouvelle ville de passage</label>\n//         <input type=\"text\" onChange={(e) => setAjoutV(e.target.value)}/>\n//         <button className=\"btn btn-primary\" onClick={() => Ajouter()}>Ajouter la ville</button>\n//       </div>\n//       <table className=\"w-25\">\n//         <thead>\n//           <tr>\n//             <th>Nom de ville</th>\n//             <th>order passage</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {train.villes?train.villes.map((train, index) => (\n//             <tr className=\"text-center\" key={index}>\n//               <td>{train.nomV}</td>\n//               <td>{train.ordreP}</td>\n//               <td><button className=\"btn btn-primary\" onClick={() => Supp(index)}>Supprimer</button></td>\n//             </tr>\n//           )): \"\"}\n//         </tbody>\n//       </table>\n//     </>\n//   );\n// }\n// export default App;\n// import React,{useState} from 'react';\n// const App = () => {\n//     const trins = [\n//         {\n//           id: \"t1\",\n//           nom: \"Buraq\",\n//           villes: [\n//             { nomV: \"fes\", ordreP: 10 },\n//             { nomV: \"meknes\", ordreP: 20 },\n//           ],\n//         },\n//         {\n//           id: \"t2\",\n//           nom: \"Gazel\",\n//           villes: [\n//             { nomV: \"casa\", ordreP: 10 },\n//             { nomV: \"meknes\", ordreP: 20 },\n//           ],\n//         },\n//         {\n//           id: \"t3\",\n//           nom: \"Eagle-Wins\",\n//           villes: [\n//             { nomV: \"asfi\", ordreP: 10 },\n//             { nomV: \"meknes\", ordreP: 20 },\n//           ],\n//         },\n//         {\n//           id: \"t4\",\n//           nom: \"Fennec\",\n//           villes: [\n//             { nomV: \"laayoun\", ordreP: 10 },\n//             { nomV: \"meknes\", ordreP: 20 },\n//           ],\n//         },\n//       ];\n//     const [traunID, setTrainId] = useState()\n//     const [tab, setTab] = useState(trins)\n//     const[ville,setVille]=useState()\n//     function Rechercher()\n//     {\n//         setTab(trins.find((trn) => trn.id == traunID));\n//     }\n//      function ajouter_ville()\n//     {\n//         tab.villes.push({ordreP:(tab.villes.length+1)*10, nomV:ville});\n//         setTab((prev)=>({\n//             ...prev,villes:tab.villes\n//         }))\n//     }\n// //   function Supp(index){\n// //     train.villes.splice(index,1);\n// //     setTrain({...train, villes : train.villes})\n// //   }\n//     function supremier(i){\n//         tab.villes.splice(i,1);\n//        setTab({...tab, villes : tab.villes})\n//     }\n//     return (\n//         <div>\n//             <h1>Suivi des vélos Electriques</h1>\n//             id <input type=\"text\" onChange={(event) => setTrainId(event.target.value)} /> <br />\n//             nom <input type=\"text\" value={(tab)?tab.nom:''} />\n//             <button onClick={() => Rechercher()}>Rechercher</button> <br />\n//            ville depart: <b>{tab.villes?tab.villes[0].nomV:\"\"}</b>\n//             ville arrivée :<b>{tab.villes?tab.villes[tab.villes.length - 1].nomV:\"\"}</b>\n//             nouvelle_ville de passage <input type='text' onChange={(e)=>setVille(e.target.value)}/>\n//             <button onClick={()=>ajouter_ville()}>Ajouter la ville</button>\n//             <table>\n//                 <tr>\n//                     <th>id parcours</th>\n//                     <th>distance</th>\n//                 </tr>\n//                 {\n//                     (tab.villes)?tab.villes.map((v,index) => {\n//                         return <tr key={index}>\n//                             <td> {v.nomV} </td>\n//                             <td> {(v.ordreP)} </td>\n//                             <td> <button onClick={()=>supremier(index)}>delete</button> </td>\n//                         </tr> \n//                     }):''\n//                 }\n//             </table>\n//         </div>\n//     );\n// }\n// export default App;","map":{"version":3,"names":[],"sources":["D:/etuds ofppt/2_anne/Devlop_frontend/fahmReact/pratiqueFhm/src/App.js"],"sourcesContent":["// //=================Serie_Revision\r\n// //---------------------------ex1:\r\n// import { React, useState } from \"react\";\r\n\r\n// const trains = [\r\n//   {\r\n//     id: \"t1\",\r\n//     nom: \"Buraq\",\r\n//     villes: [\r\n//       { nomV: \"fes\", ordreP: 10 },\r\n//       { nomV: \"meknes\", ordreP: 20 },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: \"t2\",\r\n//     nom: \"Gazel\",\r\n//     villes: [\r\n//       { nomV: \"casa\", ordreP: 10 },\r\n//       { nomV: \"meknes\", ordreP: 20 },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: \"t3\",\r\n//     nom: \"Eagle-Wins\",\r\n//     villes: [\r\n//       { nomV: \"asfi\", ordreP: 10 },\r\n//       { nomV: \"meknes\", ordreP: 20 },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: \"t4\",\r\n//     nom: \"Fennec\",\r\n//     villes: [\r\n//       { nomV: \"laayoun\", ordreP: 10 },\r\n//       { nomV: \"meknes\", ordreP: 20 },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\n// function App() {\r\n//   const [idT, setIdT] = useState();\r\n//   const [train, setTrain] = useState(trains);\r\n//   const [ajoutV,setAjoutV] = useState();\r\n//   function Recherche(){\r\n//   if(idT) setTrain(trains.find(train => train.id === idT));\r\n//   }\r\n//   function Ajouter(){\r\n//     if(ajoutV && train){\r\n//       const villeA = train.villes.push({nomV : ajoutV,\r\n//       orderP : train.villes[train.villes.length - 1].ordreP + 10})\r\n//       setTrain(prevState => ({...prevState, villeA}))\r\n//     }\r\n//   }\r\n//   function Supp(index){\r\n//     train.villes.splice(index,1);\r\n//     setTrain({...train, villes : train.villes})\r\n//   }\r\n//   return (\r\n//     <>\r\n//       <h1>Gestion des trajets de trains</h1>\r\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\r\n//         <label htmlFor=\"idT\">Id Train</label>\r\n//         <input type=\"text\"  onChange={(e) => setIdT(e.target.value)} />\r\n//         <button className=\"btn btn-primary\" onClick={() => Recherche(idT)}>Rechercher</button>\r\n//       </div>\r\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\r\n//         <label htmlFor=\"nom\">Nom</label>\r\n//         <input type=\"text\" readOnly value={train?train.nom:\"\"}/>\r\n//       </div>\r\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\r\n//         <label htmlFor=\"villeD\">Ville depart</label>\r\n//         <input type=\"text\" readOnly value={train.villes?train.villes[0].nomV:\"\"}/>\r\n//       </div>\r\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\r\n//         <label htmlFor=\"villeT\">Ville terminus</label>\r\n//         <input type=\"text\" readOnly value={train.villes?train.villes[train.villes.length - 1].nomV:\"\"}/>\r\n//       </div>\r\n//       <div className=\"d-flex  justify-content-between w-50 m-5 text-center\">\r\n//         <label htmlFor=\"nvV\">Nouvelle ville de passage</label>\r\n//         <input type=\"text\" onChange={(e) => setAjoutV(e.target.value)}/>\r\n//         <button className=\"btn btn-primary\" onClick={() => Ajouter()}>Ajouter la ville</button>\r\n//       </div>\r\n//       <table className=\"w-25\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Nom de ville</th>\r\n//             <th>order passage</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {train.villes?train.villes.map((train, index) => (\r\n//             <tr className=\"text-center\" key={index}>\r\n//               <td>{train.nomV}</td>\r\n//               <td>{train.ordreP}</td>\r\n//               <td><button className=\"btn btn-primary\" onClick={() => Supp(index)}>Supprimer</button></td>\r\n//             </tr>\r\n//           )): \"\"}\r\n//         </tbody>\r\n//       </table>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n// import React,{useState} from 'react';\r\n\r\n// const App = () => {\r\n\r\n//     const trins = [\r\n//         {\r\n//           id: \"t1\",\r\n//           nom: \"Buraq\",\r\n//           villes: [\r\n//             { nomV: \"fes\", ordreP: 10 },\r\n//             { nomV: \"meknes\", ordreP: 20 },\r\n//           ],\r\n//         },\r\n//         {\r\n//           id: \"t2\",\r\n//           nom: \"Gazel\",\r\n//           villes: [\r\n//             { nomV: \"casa\", ordreP: 10 },\r\n//             { nomV: \"meknes\", ordreP: 20 },\r\n//           ],\r\n//         },\r\n//         {\r\n//           id: \"t3\",\r\n//           nom: \"Eagle-Wins\",\r\n//           villes: [\r\n//             { nomV: \"asfi\", ordreP: 10 },\r\n//             { nomV: \"meknes\", ordreP: 20 },\r\n//           ],\r\n//         },\r\n//         {\r\n//           id: \"t4\",\r\n//           nom: \"Fennec\",\r\n//           villes: [\r\n//             { nomV: \"laayoun\", ordreP: 10 },\r\n//             { nomV: \"meknes\", ordreP: 20 },\r\n//           ],\r\n//         },\r\n//       ];\r\n\r\n//     const [traunID, setTrainId] = useState()\r\n//     const [tab, setTab] = useState(trins)\r\n//     const[ville,setVille]=useState()\r\n\r\n//     function Rechercher()\r\n//     {\r\n//         setTab(trins.find((trn) => trn.id == traunID));\r\n//     }\r\n\r\n//      function ajouter_ville()\r\n//     {\r\n//         tab.villes.push({ordreP:(tab.villes.length+1)*10, nomV:ville});\r\n//         setTab((prev)=>({\r\n//             ...prev,villes:tab.villes\r\n//         }))\r\n//     }\r\n// //   function Supp(index){\r\n// //     train.villes.splice(index,1);\r\n// //     setTrain({...train, villes : train.villes})\r\n// //   }\r\n\r\n//     function supremier(i){\r\n//         tab.villes.splice(i,1);\r\n//        setTab({...tab, villes : tab.villes})\r\n//     }\r\n//     return (\r\n//         <div>\r\n//             <h1>Suivi des vélos Electriques</h1>\r\n//             id <input type=\"text\" onChange={(event) => setTrainId(event.target.value)} /> <br />\r\n//             nom <input type=\"text\" value={(tab)?tab.nom:''} />\r\n//             <button onClick={() => Rechercher()}>Rechercher</button> <br />\r\n//            ville depart: <b>{tab.villes?tab.villes[0].nomV:\"\"}</b>\r\n//             ville arrivée :<b>{tab.villes?tab.villes[tab.villes.length - 1].nomV:\"\"}</b>\r\n//             nouvelle_ville de passage <input type='text' onChange={(e)=>setVille(e.target.value)}/>\r\n//             <button onClick={()=>ajouter_ville()}>Ajouter la ville</button>\r\n//             <table>\r\n//                 <tr>\r\n//                     <th>id parcours</th>\r\n//                     <th>distance</th>\r\n//                 </tr>\r\n\r\n//                 {\r\n//                     (tab.villes)?tab.villes.map((v,index) => {\r\n//                         return <tr key={index}>\r\n//                             <td> {v.nomV} </td>\r\n//                             <td> {(v.ordreP)} </td>\r\n//                             <td> <button onClick={()=>supremier(index)}>delete</button> </td>\r\n//                         </tr> \r\n//                     }):''\r\n//                 }\r\n\r\n//             </table>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings},"metadata":{},"sourceType":"module"}