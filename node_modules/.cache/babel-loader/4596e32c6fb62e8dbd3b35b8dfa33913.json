{"ast":null,"code":"import { configureStoren, createSlice } from \"@reduxjs/toolkit\";\nconst initTab = {\n  tbl: []\n};\nconst todoReducer = createSlice; // import { createSlice ,configureStore} from \"@reduxjs/toolkit\";\n// const initState={conter:10};\n// const counterReducer=createSlice({\n//     name:\"counter\",\n//     initialState:initState,\n//     reducers:{\n//         increment:(state)=>{\n//             state.conter=state.conter+1\n//         },\n//         decrement:(state)=>{\n//             state.conter=state.conter-1\n//         }\n//     }\n// })\n// export const{increment,decrement}=counterReducer.actions\n// const store=configureStore({\n//     reducer:{\n//         counter:counterReducer.reducer\n//     }\n// })\n// export default store","map":{"version":3,"names":["configureStoren","createSlice","initTab","tbl","todoReducer"],"sources":["D:/etuds ofppt/2_anne/Devlop_frontend/fahmReact/pratiqueFhm/src/components/store.js"],"sourcesContent":["import { configureStoren, createSlice} from \"@reduxjs/toolkit\";\r\nconst initTab={tbl:[]}\r\nconst todoReducer=createSlice\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { createSlice ,configureStore} from \"@reduxjs/toolkit\";\r\n\r\n// const initState={conter:10};\r\n// const counterReducer=createSlice({\r\n//     name:\"counter\",\r\n//     initialState:initState,\r\n//     reducers:{\r\n//         increment:(state)=>{\r\n//             state.conter=state.conter+1\r\n//         },\r\n//         decrement:(state)=>{\r\n//             state.conter=state.conter-1\r\n//         }\r\n//     }\r\n// })\r\n\r\n// export const{increment,decrement}=counterReducer.actions\r\n\r\n// const store=configureStore({\r\n//     reducer:{\r\n//         counter:counterReducer.reducer\r\n//     }\r\n// })\r\n// export default store\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,MAAMC,OAAO,GAAC;EAACC,GAAG,EAAC;AAAL,CAAd;AACA,MAAMC,WAAW,GAACH,WAAlB,C,CAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}