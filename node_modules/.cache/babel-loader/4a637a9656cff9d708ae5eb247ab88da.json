{"ast":null,"code":"import { DECREMENT, INCREMENT } from \"../actions/ReduxAction\";\n\nconst ConunterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    val: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT:\n      return { ...state,\n        val: state.val + 1\n      };\n\n    case DECREMENT:\n      return { ...state,\n        val: state.val - 1\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = ConunterReducer;\nexport default ConunterReducer; // Redux m7laba \n// action (client)\n// reducer mol m7laba\n//  redpatch hia li ktrbthom\n\nvar _c;\n\n$RefreshReg$(_c, \"ConunterReducer\");","map":{"version":3,"names":["DECREMENT","INCREMENT","ConunterReducer","state","val","action","type"],"sources":["D:/etuds ofppt/2_anne/Devlop_frontend/fahmReact/pratiqueFhm/src/Redux/reducers/CounterReducer.js"],"sourcesContent":["import { DECREMENT, INCREMENT } from \"../actions/ReduxAction\";\r\nconst ConunterReducer=(state = {val:0}, action)=>{\r\n    switch(action.type){\r\n        case INCREMENT :\r\n            return {...state, val : state.val + 1};\r\n        case DECREMENT :\r\n            return {...state, val : state.val - 1};\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport default ConunterReducer;\r\n\r\n\r\n\r\n\r\n// Redux m7laba \r\n\r\n// action (client)\r\n\r\n// reducer mol m7laba\r\n\r\n//  redpatch hia li ktrbthom"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,wBAArC;;AACA,MAAMC,eAAe,GAAC,YAA2B;EAAA,IAA1BC,KAA0B,uEAAlB;IAACC,GAAG,EAAC;EAAL,CAAkB;EAAA,IAATC,MAAS;;EAC7C,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKL,SAAL;MACI,OAAO,EAAC,GAAGE,KAAJ;QAAWC,GAAG,EAAGD,KAAK,CAACC,GAAN,GAAY;MAA7B,CAAP;;IACJ,KAAKJ,SAAL;MACI,OAAO,EAAC,GAAGG,KAAJ;QAAWC,GAAG,EAAGD,KAAK,CAACC,GAAN,GAAY;MAA7B,CAAP;;IACJ;MACI,OAAOD,KAAP;EANR;AAQH,CATD;;KAAMD,e;AAUN,eAAeA,eAAf,C,CAKA;AAEA;AAEA;AAEA"},"metadata":{},"sourceType":"module"}