{"ast":null,"code":"import { configureStoren, createSlice } from \"@reduxjs/toolkit\";\nconst initTab = {\n  tbl: []\n};\nconst todoReducer = createSlice({\n  name: 'table',\n  initialState: initTab,\n  reducers: {\n    Ajouter: (state, action) => {\n      return { ...state,\n        tbl: [...state.tb]\n      };\n    }\n  }\n}); // export const InicialAction=(state={val:elms},action)=>{\n//     switch(action.type){\n//              case 'AJOUTER':\n//                  return {...state,val:[...state.val,action.payload]};\n//             case\"SUPREMIER\":\n//                  return{...state,val:[...state.val.filter((f)=>f.id!==parseInt(action.payload))]}\n//     default :\n//             return state;\n//     }\n// }\n// import { createSlice ,configureStore} from \"@reduxjs/toolkit\";\n// const initState={conter:10};\n// const counterReducer=createSlice({\n//     name:\"counter\",\n//     initialState:initState,\n//     reducers:{\n//         increment:(state)=>{\n//             state.conter=state.conter+1\n//         },\n//         decrement:(state)=>{\n//             state.conter=state.conter-1\n//         }\n//     }\n// })\n// export const{increment,decrement}=counterReducer.actions\n// const store=configureStore({\n//     reducer:{\n//         counter:counterReducer.reducer\n//     }\n// })\n// export default store","map":{"version":3,"names":["configureStoren","createSlice","initTab","tbl","todoReducer","name","initialState","reducers","Ajouter","state","action","tb"],"sources":["D:/etuds ofppt/2_anne/Devlop_frontend/fahmReact/pratiqueFhm/src/components/store.js"],"sourcesContent":["import { configureStoren, createSlice} from \"@reduxjs/toolkit\";\r\nconst initTab={tbl:[]}\r\nconst todoReducer=createSlice({\r\n    name:'table',\r\n    initialState:initTab,\r\n    reducers:{\r\n        Ajouter:(state,action)=>{\r\n            return{...state,tbl:[...state.tb]}\r\n        }\r\n    }\r\n})\r\n\r\n\r\n\r\n// export const InicialAction=(state={val:elms},action)=>{\r\n//     switch(action.type){\r\n//              case 'AJOUTER':\r\n//                  return {...state,val:[...state.val,action.payload]};\r\n//             case\"SUPREMIER\":\r\n//                  return{...state,val:[...state.val.filter((f)=>f.id!==parseInt(action.payload))]}\r\n//     default :\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// import { createSlice ,configureStore} from \"@reduxjs/toolkit\";\r\n\r\n// const initState={conter:10};\r\n// const counterReducer=createSlice({\r\n//     name:\"counter\",\r\n//     initialState:initState,\r\n//     reducers:{\r\n//         increment:(state)=>{\r\n//             state.conter=state.conter+1\r\n//         },\r\n//         decrement:(state)=>{\r\n//             state.conter=state.conter-1\r\n//         }\r\n//     }\r\n// })\r\n\r\n// export const{increment,decrement}=counterReducer.actions\r\n\r\n// const store=configureStore({\r\n//     reducer:{\r\n//         counter:counterReducer.reducer\r\n//     }\r\n// })\r\n// export default store\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,MAAMC,OAAO,GAAC;EAACC,GAAG,EAAC;AAAL,CAAd;AACA,MAAMC,WAAW,GAACH,WAAW,CAAC;EAC1BI,IAAI,EAAC,OADqB;EAE1BC,YAAY,EAACJ,OAFa;EAG1BK,QAAQ,EAAC;IACLC,OAAO,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;MACpB,OAAM,EAAC,GAAGD,KAAJ;QAAUN,GAAG,EAAC,CAAC,GAAGM,KAAK,CAACE,EAAV;MAAd,CAAN;IACH;EAHI;AAHiB,CAAD,CAA7B,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}