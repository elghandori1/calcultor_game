{"ast":null,"code":"var _jsxFileName = \"D:\\\\etuds ofppt\\\\2_anne\\\\Devlop_frontend\\\\fahmReact\\\\pratiqueFhm\\\\src\\\\App.js\";\n// import React,{useState} from 'react';\n// const App = () => {\n//     const velos = [\n//         {ref:'v1', marque:'ford', autonomie:0, kilometrage:0, parcours:[] },\n//         {ref:'v2', marque:'ford', autonomie:0, kilometrage:0, parcours:[] },\n//         {ref:'v3', marque:'ford', autonomie:0, kilometrage:0, parcours:[] },\n//         {ref:'v4', marque:'ford', autonomie:0, kilometrage:0, parcours:[] }\n//     ]\n//     const [veloRef, setVeloRef] = useState()\n//     const [min, setMin] = useState()\n//     const [distance, setDistance] = useState()\n//     const [tab, setTab] = useState([])\n//     function Rechercher()\n//     {\n//         setTab(velos.find((v) => v.ref === veloRef));\n//     }\n//     function charger()\n//     {\n//         tab.autonomie += (min<100)? min : 100;\n//         setTab((prev)=>({\n//             ...prev,autonomie:tab.autonomie\n//         }))\n//     }\n//     function ajouter_parcours()\n//     {\n//       if(tab.autonomie > distance)\n//         {tab.parcours.push({id:tab.parcours.length+1, distance:distance});\n//         setTab((prev)=>({\n//             ...prev,parcours:tab.parcours\n//         }))}\n//     }\n//     return (\n//         <div>\n//             <h1>Suivi des vélos Electriques</h1>\n//             reference <input type=\"text\" value={veloRef} onChange={(event) => setVeloRef(event.target.value)} /> <br />\n//             Marque <input type=\"text\" value={(tab)?tab.marque:''} />\n//             <button onClick={() => Rechercher()}>Rechercher</button> <br />\n//             Autonomie en [km] : <input type=\"text\" value={(tab)?tab.autonomie:''} />\n//             <br />\n//             kilométrage <input type=\"text\" value={(tab)?tab.kilometrage:''} />\n//             <br />\n//             nombre de minute <input type=\"text\" value={min} onChange={(event) => setMin(Number(event.target.value))}  />\n//             <button onClick={() => charger()}>charger</button> <br />\n//             distance de parcours <input type=\"text\" value={distance} onChange={(event) => setDistance(Number(event.target.value))}  />\n//             <button onClick={() => ajouter_parcours()}>ajouter parcours</button>\n//             <br />\n//             <table>\n//                 <tr>\n//                     <th>id parcours</th>\n//                     <th>distance</th>\n//                 </tr>\n//                 {\n//                     (tab.parcours)?tab.parcours.map((velo) => {\n//                         return <tr>\n//                             <td> {velo.id} </td>\n//                             <td> {velo.distance} </td>\n//                         </tr> \n//                     }):''\n//                 }\n//             </table>\n//         </div>\n//     );\n// }\n// export default App;\n//===================================================================\nimport React from 'react';\nimport Counter from './components/Counter';\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Redux/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n} // import React from \"react\";\n// import { useSelector, useDispatch } from \"react-redux\"; \n// //import { decrement,increment,reset} from \"../Redux/actions/reduxActions\"; \n// export default function App() {\n//   const counter = useSelector((state) => state); \n//   const dispatch = useDispatch(); \n//   return (\n//     <div >\n//       <div>{counter}</div>\n//       <button>Increase</button>\n//       <button>Reset</button>\n//       <button>Decrease</button>\n//     </div>\n//   );\n// }\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Counter","Provider","store","App"],"sources":["D:/etuds ofppt/2_anne/Devlop_frontend/fahmReact/pratiqueFhm/src/App.js"],"sourcesContent":["// import React,{useState} from 'react';\n\n// const App = () => {\n\n//     const velos = [\n//         {ref:'v1', marque:'ford', autonomie:0, kilometrage:0, parcours:[] },\n//         {ref:'v2', marque:'ford', autonomie:0, kilometrage:0, parcours:[] },\n//         {ref:'v3', marque:'ford', autonomie:0, kilometrage:0, parcours:[] },\n//         {ref:'v4', marque:'ford', autonomie:0, kilometrage:0, parcours:[] }\n//     ]\n\n//     const [veloRef, setVeloRef] = useState()\n//     const [min, setMin] = useState()\n//     const [distance, setDistance] = useState()\n//     const [tab, setTab] = useState([])\n\n//     function Rechercher()\n//     {\n//         setTab(velos.find((v) => v.ref === veloRef));\n//     }\n\n//     function charger()\n//     {\n//         tab.autonomie += (min<100)? min : 100;\n//         setTab((prev)=>({\n//             ...prev,autonomie:tab.autonomie\n//         }))\n//     }\n    \n//     function ajouter_parcours()\n//     {\n//       if(tab.autonomie > distance)\n//         {tab.parcours.push({id:tab.parcours.length+1, distance:distance});\n//         setTab((prev)=>({\n//             ...prev,parcours:tab.parcours\n//         }))}\n//     }\n\n//     return (\n//         <div>\n//             <h1>Suivi des vélos Electriques</h1>\n//             reference <input type=\"text\" value={veloRef} onChange={(event) => setVeloRef(event.target.value)} /> <br />\n\n//             Marque <input type=\"text\" value={(tab)?tab.marque:''} />\n//             <button onClick={() => Rechercher()}>Rechercher</button> <br />\n\n//             Autonomie en [km] : <input type=\"text\" value={(tab)?tab.autonomie:''} />\n//             <br />\n\n//             kilométrage <input type=\"text\" value={(tab)?tab.kilometrage:''} />\n//             <br />\n\n//             nombre de minute <input type=\"text\" value={min} onChange={(event) => setMin(Number(event.target.value))}  />\n//             <button onClick={() => charger()}>charger</button> <br />\n\n//             distance de parcours <input type=\"text\" value={distance} onChange={(event) => setDistance(Number(event.target.value))}  />\n//             <button onClick={() => ajouter_parcours()}>ajouter parcours</button>\n//             <br />\n\n//             <table>\n//                 <tr>\n//                     <th>id parcours</th>\n//                     <th>distance</th>\n//                 </tr>\n\n//                 {\n//                     (tab.parcours)?tab.parcours.map((velo) => {\n//                         return <tr>\n//                             <td> {velo.id} </td>\n//                             <td> {velo.distance} </td>\n//                         </tr> \n//                     }):''\n//                 }\n\n//             </table>\n//         </div>\n//     );\n// }\n\n// export default App;\n\n//===================================================================\n\n\nimport React from 'react';\nimport Counter from './components/Counter'\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Redux/store\";\nexport default function App() {\n  return (\n    <div>\n      <Provider store={store}>\n              <Counter />\n      </Provider>\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from \"react\";\n// import { useSelector, useDispatch } from \"react-redux\"; \n// //import { decrement,increment,reset} from \"../Redux/actions/reduxActions\"; \n// export default function App() {\n//   const counter = useSelector((state) => state); \n//   const dispatch = useDispatch(); \n//   return (\n//     <div >\n//       <div>{counter}</div>\n//       <button>Increase</button>\n//       <button>Reset</button>\n//       <button>Decrease</button>\n//     </div>\n//   );\n// }\n"],"mappings":";AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,QAAsB,eAAtB;;AACA,eAAe,SAASC,GAAT,GAAe;EAC5B,oBACE;IAAA,uBACE,QAAC,QAAD;MAAU,KAAK,EAAED,KAAjB;MAAA,uBACQ,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA;IADR;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,C,CA0BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAhDwBC,G"},"metadata":{},"sourceType":"module"}