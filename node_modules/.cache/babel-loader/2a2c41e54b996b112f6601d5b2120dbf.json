{"ast":null,"code":"import pays from \"../../Datas\";\n\nconst initialreducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : pays;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'AjouterActionPAY':\n      return { ...state,\n        pays: [...state.pays, action.payload]\n      };\n    // return {...state, val : state.val + 1};\n\n    case 'ModifierAction_PUPLATION':\n      const pay = state.pays.find(p => p.code === parseInt(action.payload.code));\n\n      if (pay) {\n        pay.name = action.payload.name;\n        pay.SurfaceArea = action.payload.SurfaceArea;\n        pay.Population = action.payload.Population;\n      }\n\n      return state;\n\n    case 'SUPREMIER_PUPLATION':\n      return { ...state,\n        pays: [...state.filter(f => f.code !== parseInt(action.payload))]\n      };\n\n    default:\n      return state;\n  }\n}; // const Initialreducer=()=>{\n//     return(\n//         <div>\n//             <table>\n//                 {initial.map((e)=>{\n//                     return <tr>\n//                         <td>{e.code}</td>\n//                         <td>{e.name}</td>\n//                         <td>{e.SurfaceArea}</td>\n//                     </tr>\n//                 })}\n//             </table>\n//         </div>\n//     )\n// }\n\n\nexport default initialreducer;","map":{"version":3,"names":["pays","initialreducer","state","action","type","payload","pay","find","p","code","parseInt","name","SurfaceArea","Population","filter","f"],"sources":["D:/etuds ofppt/2_anne/Devlop_frontend/fahmReact/pratiqueFhm/src/components/Redux/reducers/Initialreducer.js"],"sourcesContent":["import pays from \"../../Datas\";\r\n\r\nconst initialreducer = (state=pays,action)=>{\r\n       switch(action.type){\r\n        case 'AjouterActionPAY':\r\n            return {...state,pays:[...state.pays,action.payload]};\r\n            // return {...state, val : state.val + 1};\r\n\r\n        case 'ModifierAction_PUPLATION':\r\n            const pay=state.pays.find((p)=>p.code=== parseInt(action.payload.code))\r\n            if(pay){\r\n                pay.name=action.payload.name\r\n                pay.SurfaceArea=action.payload.SurfaceArea\r\n                pay.Population=action.payload.Population\r\n            }\r\n            return state\r\n        case 'SUPREMIER_PUPLATION':\r\n            return {...state,pays:[...state.filter((f)=>f.code!==parseInt(action.payload))]};\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n// const Initialreducer=()=>{\r\n//     return(\r\n//         <div>\r\n//             <table>\r\n//                 {initial.map((e)=>{\r\n//                     return <tr>\r\n//                         <td>{e.code}</td>\r\n//                         <td>{e.name}</td>\r\n//                         <td>{e.SurfaceArea}</td>\r\n//                     </tr>\r\n//                 })}\r\n//             </table>\r\n//         </div>\r\n//     )\r\n// }\r\nexport default initialreducer\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,cAAc,GAAG,YAAqB;EAAA,IAApBC,KAAoB,uEAAdF,IAAc;EAAA,IAATG,MAAS;;EACrC,QAAOA,MAAM,CAACC,IAAd;IACC,KAAK,kBAAL;MACI,OAAO,EAAC,GAAGF,KAAJ;QAAUF,IAAI,EAAC,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAeG,MAAM,CAACE,OAAtB;MAAf,CAAP;IACA;;IAEJ,KAAK,0BAAL;MACI,MAAMC,GAAG,GAACJ,KAAK,CAACF,IAAN,CAAWO,IAAX,CAAiBC,CAAD,IAAKA,CAAC,CAACC,IAAF,KAAUC,QAAQ,CAACP,MAAM,CAACE,OAAP,CAAeI,IAAhB,CAAvC,CAAV;;MACA,IAAGH,GAAH,EAAO;QACHA,GAAG,CAACK,IAAJ,GAASR,MAAM,CAACE,OAAP,CAAeM,IAAxB;QACAL,GAAG,CAACM,WAAJ,GAAgBT,MAAM,CAACE,OAAP,CAAeO,WAA/B;QACAN,GAAG,CAACO,UAAJ,GAAeV,MAAM,CAACE,OAAP,CAAeQ,UAA9B;MACH;;MACD,OAAOX,KAAP;;IACJ,KAAK,qBAAL;MACI,OAAO,EAAC,GAAGA,KAAJ;QAAUF,IAAI,EAAC,CAAC,GAAGE,KAAK,CAACY,MAAN,CAAcC,CAAD,IAAKA,CAAC,CAACN,IAAF,KAASC,QAAQ,CAACP,MAAM,CAACE,OAAR,CAAnC,CAAJ;MAAf,CAAP;;IACJ;MACI,OAAOH,KAAP;EAhBL;AAkBN,CAnBD,C,CAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeD,cAAf"},"metadata":{},"sourceType":"module"}