{"ast":null,"code":"import initial from \"../../Datas\";\n\nconst Initialreducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    val: initial\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  return state;\n\n  switch (action.type) {\n    case 'AJOUTERPAY':\n      return { ...state,\n        pays: [...state, action.payload]\n      };\n\n    case 'MODIFIER_PUPLATION':\n      const pays = state.find(p => p.code === parseInt(action.payload.code));\n\n      if (pays) {\n        pays.name = action.payload.name;\n        pays.SurfaceArea = action.payload.SurfaceArea;\n        pays.Population = action.payload.Population;\n      }\n\n      return state;\n\n    case 'SUPREMIER_PUPLATION':\n      return { ...state,\n        pays: [...state.filter(f => f.code !== parseInt(action.payload))]\n      };\n\n    default:\n      return state;\n  }\n}; // const Initialreducer=()=>{\n//     return(\n//         <div>\n//             <table>\n//                 {initial.map((e)=>{\n//                     return <tr>\n//                         <td>{e.code}</td>\n//                         <td>{e.name}</td>\n//                         <td>{e.SurfaceArea}</td>\n//                     </tr>\n//                 })}\n//             </table>\n//         </div>\n//     )\n// }\n\n\n_c = Initialreducer;\nexport default Initialreducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Initialreducer\");","map":{"version":3,"names":["initial","Initialreducer","state","val","action","type","pays","payload","find","p","code","parseInt","name","SurfaceArea","Population","filter","f"],"sources":["D:/etuds ofppt/2_anne/Devlop_frontend/fahmReact/pratiqueFhm/src/components/Redux/reducers/Initialreducer.js"],"sourcesContent":["import initial from \"../../Datas\";\r\nconst Initialreducer=(state={val:initial},action)=>{\r\n    return state\r\n    switch(action.type){\r\n        case 'AJOUTERPAY':\r\n            return {...state,pays:[...state,action.payload]};\r\n        case 'MODIFIER_PUPLATION':\r\n            const pays=state.find((p)=>p.code=== parseInt(action.payload.code))\r\n            if(pays){\r\n                pays.name=action.payload.name\r\n                pays.SurfaceArea=action.payload.SurfaceArea\r\n                pays.Population=action.payload.Population\r\n            }\r\n            return state\r\n        case 'SUPREMIER_PUPLATION':\r\n            return {...state,pays:[...state.filter((f)=>f.code!==parseInt(action.payload))]};\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// const Initialreducer=()=>{\r\n//     return(\r\n//         <div>\r\n//             <table>\r\n//                 {initial.map((e)=>{\r\n//                     return <tr>\r\n//                         <td>{e.code}</td>\r\n//                         <td>{e.name}</td>\r\n//                         <td>{e.SurfaceArea}</td>\r\n//                     </tr>\r\n//                 })}\r\n//             </table>\r\n//         </div>\r\n//     )\r\n// }\r\nexport default Initialreducer\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,aAApB;;AACA,MAAMC,cAAc,GAAC,YAA8B;EAAA,IAA7BC,KAA6B,uEAAvB;IAACC,GAAG,EAACH;EAAL,CAAuB;EAAA,IAATI,MAAS;EAC/C,OAAOF,KAAP;;EACA,QAAOE,MAAM,CAACC,IAAd;IACI,KAAK,YAAL;MACI,OAAO,EAAC,GAAGH,KAAJ;QAAUI,IAAI,EAAC,CAAC,GAAGJ,KAAJ,EAAUE,MAAM,CAACG,OAAjB;MAAf,CAAP;;IACJ,KAAK,oBAAL;MACI,MAAMD,IAAI,GAACJ,KAAK,CAACM,IAAN,CAAYC,CAAD,IAAKA,CAAC,CAACC,IAAF,KAAUC,QAAQ,CAACP,MAAM,CAACG,OAAP,CAAeG,IAAhB,CAAlC,CAAX;;MACA,IAAGJ,IAAH,EAAQ;QACJA,IAAI,CAACM,IAAL,GAAUR,MAAM,CAACG,OAAP,CAAeK,IAAzB;QACAN,IAAI,CAACO,WAAL,GAAiBT,MAAM,CAACG,OAAP,CAAeM,WAAhC;QACAP,IAAI,CAACQ,UAAL,GAAgBV,MAAM,CAACG,OAAP,CAAeO,UAA/B;MACH;;MACD,OAAOZ,KAAP;;IACJ,KAAK,qBAAL;MACI,OAAO,EAAC,GAAGA,KAAJ;QAAUI,IAAI,EAAC,CAAC,GAAGJ,KAAK,CAACa,MAAN,CAAcC,CAAD,IAAKA,CAAC,CAACN,IAAF,KAASC,QAAQ,CAACP,MAAM,CAACG,OAAR,CAAnC,CAAJ;MAAf,CAAP;;IACJ;MACI,OAAOL,KAAP;EAdR;AAgBH,CAlBD,C,CAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KArCMD,c;AAsCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}