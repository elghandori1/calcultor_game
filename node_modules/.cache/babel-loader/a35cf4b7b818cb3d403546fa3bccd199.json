{"ast":null,"code":"var _jsxFileName = \"D:\\\\etuds ofppt\\\\2_anne\\\\Devlop_frontend\\\\fahmReact\\\\pratiqueFhm\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// //=================Serie_Revision\n// //---------------------------ex1:\n// import { React, useState } from \"react\";\n// const trains = [\n//   {\n//     id: \"t1\",\n//     nom: \"Buraq\",\n//     villes: [\n//       { nomV: \"fes\", ordreP: 10 },\n//       { nomV: \"meknes\", ordreP: 20 },\n//     ],\n//   },\n//   {\n//     id: \"t2\",\n//     nom: \"Gazel\",\n//     villes: [\n//       { nomV: \"casa\", ordreP: 10 },\n//       { nomV: \"meknes\", ordreP: 20 },\n//     ],\n//   },\n//   {\n//     id: \"t3\",\n//     nom: \"Eagle-Wins\",\n//     villes: [\n//       { nomV: \"asfi\", ordreP: 10 },\n//       { nomV: \"meknes\", ordreP: 20 },\n//     ],\n//   },\n//   {\n//     id: \"t4\",\n//     nom: \"Fennec\",\n//     villes: [\n//       { nomV: \"laayoun\", ordreP: 10 },\n//       { nomV: \"meknes\", ordreP: 20 },\n//     ],\n//   },\n// ];\n// function App() {\n//   const [idT, setIdT] = useState();\n//   const [train, setTrain] = useState(trains);\n//   const [ajoutV,setAjoutV] = useState();\n//   function Recherche(){\n//   if(idT) setTrain(trains.find(train => train.id === idT));\n//   }\n//   function Ajouter(){\n//     if(ajoutV && train){\n//       const villeA = train.villes.push({nomV : ajoutV,\n//       orderP : train.villes[train.villes.length - 1].ordreP + 10})\n//       setTrain(prevState => ({...prevState, villeA}))\n//     }\n//   }\n//   function Supp(index){\n//     train.villes.splice(index,1);\n//     setTrain({...train, villes : train.villes})\n//   }\n//   return (\n//     <>\n//       <h1>Gestion des trajets de trains</h1>\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\n//         <label htmlFor=\"idT\">Id Train</label>\n//         <input type=\"text\"  onChange={(e) => setIdT(e.target.value)} />\n//         <button className=\"btn btn-primary\" onClick={() => Recherche(idT)}>Rechercher</button>\n//       </div>\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\n//         <label htmlFor=\"nom\">Nom</label>\n//         <input type=\"text\" readOnly value={train?train.nom:\"\"}/>\n//       </div>\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\n//         <label htmlFor=\"villeD\">Ville depart</label>\n//         <input type=\"text\" readOnly value={train.villes?train.villes[0].nomV:\"\"}/>\n//       </div>\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\n//         <label htmlFor=\"villeT\">Ville terminus</label>\n//         <input type=\"text\" readOnly value={train.villes?train.villes[train.villes.length - 1].nomV:\"\"}/>\n//       </div>\n//       <div className=\"d-flex  justify-content-between w-50 m-5 text-center\">\n//         <label htmlFor=\"nvV\">Nouvelle ville de passage</label>\n//         <input type=\"text\" onChange={(e) => setAjoutV(e.target.value)}/>\n//         <button className=\"btn btn-primary\" onClick={() => Ajouter()}>Ajouter la ville</button>\n//       </div>\n//       <table className=\"w-25\">\n//         <thead>\n//           <tr>\n//             <th>Nom de ville</th>\n//             <th>order passage</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {train.villes?train.villes.map((train, index) => (\n//             <tr className=\"text-center\" key={index}>\n//               <td>{train.nomV}</td>\n//               <td>{train.ordreP}</td>\n//               <td><button className=\"btn btn-primary\" onClick={() => Supp(index)}>Supprimer</button></td>\n//             </tr>\n//           )): \"\"}\n//         </tbody>\n//       </table>\n//     </>\n//   );\n// }\n// export default App;\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const trins = [{\n    id: \"t1\",\n    nom: \"Buraq\",\n    villes: [{\n      nomV: \"fes\",\n      ordreP: 10\n    }, {\n      nomV: \"meknes\",\n      ordreP: 20\n    }]\n  }, {\n    id: \"t2\",\n    nom: \"Gazel\",\n    villes: [{\n      nomV: \"casa\",\n      ordreP: 10\n    }, {\n      nomV: \"meknes\",\n      ordreP: 20\n    }]\n  }, {\n    id: \"t3\",\n    nom: \"Eagle-Wins\",\n    villes: [{\n      nomV: \"asfi\",\n      ordreP: 10\n    }, {\n      nomV: \"meknes\",\n      ordreP: 20\n    }]\n  }, {\n    id: \"t4\",\n    nom: \"Fennec\",\n    villes: [{\n      nomV: \"laayoun\",\n      ordreP: 10\n    }, {\n      nomV: \"meknes\",\n      ordreP: 20\n    }]\n  }];\n  const [traunID, setTrainId] = useState();\n  const [tab, setTab] = useState(trins);\n  const [ville, setVille] = useState();\n\n  function Rechercher() {\n    setTab(trins.find(trn => trn.id == traunID));\n  }\n\n  function ajouter_ville() {\n    tab.villes.push({\n      ordreP: (tab.villes.length + 1) * 10,\n      nomV: ville\n    });\n    setTab(prev => ({ ...prev,\n      villes: tab.villes\n    }));\n  }\n\n  function supremier(i) {\n    setTab(tab.villes.filter(f => f.ordreP !== i));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Suivi des v\\xE9los Electriques\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), \"id \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: event => setTrainId(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 16\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 91\n    }, this), \"nom \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: tab ? tab.nom : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => Rechercher(),\n      children: \"Rechercher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 70\n    }, this), \"ville depart: \", /*#__PURE__*/_jsxDEV(\"b\", {\n      children: tab.villes ? trin.villes[0].nomV : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 26\n    }, this), \"ville arriv\\xE9e :\", /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"f\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 28\n    }, this), \"nouvelle_ville de passage \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setVille(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => ajouter_ville(),\n      children: \"Ajouter la ville\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"id parcours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), tab.villes ? tab.villes.map(v => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", v.nomV, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", v.ordreP, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => supremier(v.ordreP),\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 34\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 32\n        }, this);\n      }) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"yfUwWD7V8Qdko+bNOvqJLpuAJHA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","trins","id","nom","villes","nomV","ordreP","traunID","setTrainId","tab","setTab","ville","setVille","Rechercher","find","trn","ajouter_ville","push","length","prev","supremier","i","filter","f","event","target","value","trin","e","map","v"],"sources":["D:/etuds ofppt/2_anne/Devlop_frontend/fahmReact/pratiqueFhm/src/App.js"],"sourcesContent":["// //=================Serie_Revision\r\n// //---------------------------ex1:\r\n// import { React, useState } from \"react\";\r\n\r\n// const trains = [\r\n//   {\r\n//     id: \"t1\",\r\n//     nom: \"Buraq\",\r\n//     villes: [\r\n//       { nomV: \"fes\", ordreP: 10 },\r\n//       { nomV: \"meknes\", ordreP: 20 },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: \"t2\",\r\n//     nom: \"Gazel\",\r\n//     villes: [\r\n//       { nomV: \"casa\", ordreP: 10 },\r\n//       { nomV: \"meknes\", ordreP: 20 },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: \"t3\",\r\n//     nom: \"Eagle-Wins\",\r\n//     villes: [\r\n//       { nomV: \"asfi\", ordreP: 10 },\r\n//       { nomV: \"meknes\", ordreP: 20 },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: \"t4\",\r\n//     nom: \"Fennec\",\r\n//     villes: [\r\n//       { nomV: \"laayoun\", ordreP: 10 },\r\n//       { nomV: \"meknes\", ordreP: 20 },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\n// function App() {\r\n//   const [idT, setIdT] = useState();\r\n//   const [train, setTrain] = useState(trains);\r\n//   const [ajoutV,setAjoutV] = useState();\r\n//   function Recherche(){\r\n//   if(idT) setTrain(trains.find(train => train.id === idT));\r\n//   }\r\n//   function Ajouter(){\r\n//     if(ajoutV && train){\r\n//       const villeA = train.villes.push({nomV : ajoutV,\r\n//       orderP : train.villes[train.villes.length - 1].ordreP + 10})\r\n//       setTrain(prevState => ({...prevState, villeA}))\r\n//     }\r\n//   }\r\n//   function Supp(index){\r\n//     train.villes.splice(index,1);\r\n//     setTrain({...train, villes : train.villes})\r\n//   }\r\n//   return (\r\n//     <>\r\n//       <h1>Gestion des trajets de trains</h1>\r\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\r\n//         <label htmlFor=\"idT\">Id Train</label>\r\n//         <input type=\"text\"  onChange={(e) => setIdT(e.target.value)} />\r\n//         <button className=\"btn btn-primary\" onClick={() => Recherche(idT)}>Rechercher</button>\r\n//       </div>\r\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\r\n//         <label htmlFor=\"nom\">Nom</label>\r\n//         <input type=\"text\" readOnly value={train?train.nom:\"\"}/>\r\n//       </div>\r\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\r\n//         <label htmlFor=\"villeD\">Ville depart</label>\r\n//         <input type=\"text\" readOnly value={train.villes?train.villes[0].nomV:\"\"}/>\r\n//       </div>\r\n//       <div className=\"d-flex  justify-content-between w-25 m-5 text-center\">\r\n//         <label htmlFor=\"villeT\">Ville terminus</label>\r\n//         <input type=\"text\" readOnly value={train.villes?train.villes[train.villes.length - 1].nomV:\"\"}/>\r\n//       </div>\r\n//       <div className=\"d-flex  justify-content-between w-50 m-5 text-center\">\r\n//         <label htmlFor=\"nvV\">Nouvelle ville de passage</label>\r\n//         <input type=\"text\" onChange={(e) => setAjoutV(e.target.value)}/>\r\n//         <button className=\"btn btn-primary\" onClick={() => Ajouter()}>Ajouter la ville</button>\r\n//       </div>\r\n//       <table className=\"w-25\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Nom de ville</th>\r\n//             <th>order passage</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {train.villes?train.villes.map((train, index) => (\r\n//             <tr className=\"text-center\" key={index}>\r\n//               <td>{train.nomV}</td>\r\n//               <td>{train.ordreP}</td>\r\n//               <td><button className=\"btn btn-primary\" onClick={() => Supp(index)}>Supprimer</button></td>\r\n//             </tr>\r\n//           )): \"\"}\r\n//         </tbody>\r\n//       </table>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\nimport React,{useState} from 'react';\r\n\r\nconst App = () => {\r\n\r\n    const trins = [\r\n        {\r\n          id: \"t1\",\r\n          nom: \"Buraq\",\r\n          villes: [\r\n            { nomV: \"fes\", ordreP: 10 },\r\n            { nomV: \"meknes\", ordreP: 20 },\r\n          ],\r\n        },\r\n        {\r\n          id: \"t2\",\r\n          nom: \"Gazel\",\r\n          villes: [\r\n            { nomV: \"casa\", ordreP: 10 },\r\n            { nomV: \"meknes\", ordreP: 20 },\r\n          ],\r\n        },\r\n        {\r\n          id: \"t3\",\r\n          nom: \"Eagle-Wins\",\r\n          villes: [\r\n            { nomV: \"asfi\", ordreP: 10 },\r\n            { nomV: \"meknes\", ordreP: 20 },\r\n          ],\r\n        },\r\n        {\r\n          id: \"t4\",\r\n          nom: \"Fennec\",\r\n          villes: [\r\n            { nomV: \"laayoun\", ordreP: 10 },\r\n            { nomV: \"meknes\", ordreP: 20 },\r\n          ],\r\n        },\r\n      ];\r\n\r\n    const [traunID, setTrainId] = useState()\r\n    const [tab, setTab] = useState(trins)\r\n    const[ville,setVille]=useState()\r\n\r\n    function Rechercher()\r\n    {\r\n        setTab(trins.find((trn) => trn.id == traunID));\r\n    }\r\n\r\n     function ajouter_ville()\r\n    {\r\n        tab.villes.push({ordreP:(tab.villes.length+1)*10, nomV:ville});\r\n        setTab((prev)=>({\r\n            ...prev,villes:tab.villes\r\n        }))\r\n    }\r\n\r\n\r\n    function supremier(i){\r\n       setTab(tab.villes.filter((f)=>f.ordreP!==i))\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Suivi des vélos Electriques</h1>\r\n            id <input type=\"text\" onChange={(event) => setTrainId(event.target.value)} /> <br />\r\n            nom <input type=\"text\" value={(tab)?tab.nom:''} />\r\n            <button onClick={() => Rechercher()}>Rechercher</button> <br />\r\n           ville depart: <b>{tab.villes?trin.villes[0].nomV:\"\"}</b>\r\n            ville arrivée :<b>f</b>\r\n            nouvelle_ville de passage <input type='text' onChange={(e)=>setVille(e.target.value)}/>\r\n            <button onClick={()=>ajouter_ville()}>Ajouter la ville</button>\r\n            <table>\r\n                <tr>\r\n                    <th>id parcours</th>\r\n                    <th>distance</th>\r\n                </tr>\r\n\r\n                {\r\n                    (tab.villes)?tab.villes.map((v) => {\r\n                        return <tr>\r\n                            <td> {v.nomV} </td>\r\n                            <td> {(v.ordreP)} </td>\r\n                            <td> <button onClick={()=>supremier(v.ordreP)}>delete</button> </td>\r\n                        </tr> \r\n                    }):''\r\n                }\r\n\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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"},"metadata":{},"sourceType":"module"}