{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\"; // const initTab={tbl:[\n// const  continents ={contnt:[{\n//     code: \"AF\",\n//     name: \"Africa\",\n//     surfaceArea: 30370000,\n//     population: 1216130000,\n//     avatar: 'af',\n//     Pays: [\n//       {\n//         name: \"Maroc\",\n//         population: 43850000,\n//         capital: \"Rabat\",\n//         indepYear: 1962,\n//         image: \"https://www.example.com/algeria.jpg\",\n//       },\n//     ]},{\n//     code: \"AM\",\n//     name: \"Américain \",\n//     surfaceArea: 30370000,\n//     population: 1216130000,\n//     avatar: 'am',\n//     Pays: [\n//       {\n//         name: \"Canada\",\n//         population: 43850000,\n//         capital: \"Canada\",\n//         indepYear: 1963,\n//         image: \"https://www.example.com/algeria.jpg\",\n//       },\n//       {\n//         name: \"test\",\n//         population: 43850000,\n//         capital: \"Canada\",\n//         indepYear: 1963,\n//         image: \"https://www.example.com/algeria.jpg\",\n//       }\n//     ]},{\n//     code: \"EU\",\n//     name: \"Europe \",\n//     surfaceArea: 30370000,\n//     population: 1216130000,\n//     avatar: 'eu',\n//     Pays: [\n//       {\n//         name: \"France\",\n//         population: 43850000,\n//         capital: \"Paris\",\n//         indepYear: 1964,\n//         image: \"https://www.example.com/algeria.jpg\",\n//       },\n//     ],\n//   }]} \n//=======================\n\nconst initialState = {\n  continents: [{\n    code: \"AF\",\n    name: \"Africa\",\n    surfaceArea: 30370000,\n    population: 1216130000,\n    avatar: af,\n    Pays: [{\n      name: \"Maroc\",\n      population: 43850000,\n      capital: \"Rabat\",\n      indepYear: 1962,\n      image: \"https://www.example.com/algeria.jpg\"\n    }]\n  }, {\n    code: \"AM\",\n    name: \"Américain\",\n    surfaceArea: 30370000,\n    population: 121610000,\n    avatar: \"am\",\n    Pays: [{\n      name: \"Canada\",\n      population: 43850000,\n      capital: \"Canada\",\n      indepYear: 1963,\n      image: \"https://www.example.com/algeria.jpg\"\n    }, {\n      name: \"test\",\n      population: 43850000,\n      capital: \"Canada\",\n      indepYear: 1963,\n      image: \"https://www.example.com/algeria.jpg\"\n    }]\n  }, {\n    code: \"EU\",\n    name: \"Europe \",\n    surfaceArea: 30370000,\n    population: 121613000,\n    avatar: \"eu\",\n    Pays: [{\n      name: \"France\",\n      population: 43850000,\n      capital: \"Paris\",\n      indepYear: 1964,\n      image: \"https://www.example.com/algeria.jpg\"\n    }]\n  }],\n  filterContinents: []\n};\nconst todoReducer = createSlice({\n  name: 'table',\n  initialState: continents,\n  reducers: {// Ajouter:function(state,action){\n    //     state.tbl.push(action.payload)\n    //  },\n    //  Supremier:function(state,action){\n    //      state.tbl=state.tbl.filter((f)=>f.id!==parseInt(action.payload))\n    //  },\n    //  Update:function(state,action){\n    //     state.tbl.map(tbl=>{\n    //         if(tbl.id==action.payload.id){\n    //             tbl.nomP=action.payload.nomP;\n    //             tbl.prixP=action.payload.prixP;\n    //         }\n    //     })\n    //  }\n  }\n}); //export const{Ajouter,Supremier,Update}=todoReducer.actions;\n\nconst store = configureStore({\n  reducer: {\n    table: todoReducer.reducer\n  }\n});\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialState","continents","code","name","surfaceArea","population","avatar","af","Pays","capital","indepYear","image","filterContinents","todoReducer","reducers","store","reducer","table"],"sources":["D:/etuds ofppt/2_anne/Devlop_frontend/fahmReact/pratiqueFhm/src/components/store.jsx"],"sourcesContent":["import { configureStore,createSlice } from \"@reduxjs/toolkit\";\r\n// const initTab={tbl:[\r\n// const  continents ={contnt:[{\r\n//     code: \"AF\",\r\n//     name: \"Africa\",\r\n//     surfaceArea: 30370000,\r\n//     population: 1216130000,\r\n//     avatar: 'af',\r\n//     Pays: [\r\n//       {\r\n//         name: \"Maroc\",\r\n//         population: 43850000,\r\n//         capital: \"Rabat\",\r\n//         indepYear: 1962,\r\n//         image: \"https://www.example.com/algeria.jpg\",\r\n//       },\r\n//     ]},{\r\n//     code: \"AM\",\r\n//     name: \"Américain \",\r\n//     surfaceArea: 30370000,\r\n//     population: 1216130000,\r\n//     avatar: 'am',\r\n//     Pays: [\r\n//       {\r\n//         name: \"Canada\",\r\n//         population: 43850000,\r\n//         capital: \"Canada\",\r\n//         indepYear: 1963,\r\n//         image: \"https://www.example.com/algeria.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"test\",\r\n//         population: 43850000,\r\n//         capital: \"Canada\",\r\n//         indepYear: 1963,\r\n//         image: \"https://www.example.com/algeria.jpg\",\r\n//       }\r\n//     ]},{\r\n//     code: \"EU\",\r\n//     name: \"Europe \",\r\n//     surfaceArea: 30370000,\r\n//     population: 1216130000,\r\n//     avatar: 'eu',\r\n//     Pays: [\r\n//       {\r\n//         name: \"France\",\r\n//         population: 43850000,\r\n//         capital: \"Paris\",\r\n//         indepYear: 1964,\r\n//         image: \"https://www.example.com/algeria.jpg\",\r\n//       },\r\n//     ],\r\n//   }]} \r\n\r\n//=======================\r\nconst initialState = {\r\n  continents : [{\r\n    code: \"AF\",\r\n    name: \"Africa\",\r\n    surfaceArea: 30370000,\r\n    population: 1216130000,\r\n    avatar: af,\r\n    Pays: [\r\n      {\r\n        name: \"Maroc\",\r\n        population: 43850000,\r\n        capital: \"Rabat\",\r\n        indepYear: 1962,\r\n        image: \"https://www.example.com/algeria.jpg\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    code: \"AM\",\r\n    name: \"Américain\",\r\n    surfaceArea: 30370000,\r\n    population: 121610000,\r\n    avatar: \"am\",\r\n    Pays: [\r\n      {\r\n        name: \"Canada\",\r\n        population: 43850000,\r\n        capital: \"Canada\",\r\n        indepYear: 1963,\r\n        image: \"https://www.example.com/algeria.jpg\",\r\n      },\r\n      {\r\n        name: \"test\",\r\n        population: 43850000,\r\n        capital: \"Canada\",\r\n        indepYear: 1963,\r\n        image: \"https://www.example.com/algeria.jpg\",\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    code: \"EU\",\r\n    name: \"Europe \",\r\n    surfaceArea: 30370000,\r\n    population: 121613000,\r\n    avatar: \"eu\",\r\n    Pays: [\r\n      {\r\n        name: \"France\",\r\n        population: 43850000,\r\n        capital: \"Paris\",\r\n        indepYear: 1964,\r\n        image: \"https://www.example.com/algeria.jpg\",\r\n      },\r\n    ],\r\n  }],\r\n  filterContinents : [],\r\n}\r\n\r\n\r\nconst todoReducer=createSlice({\r\n    name:'table',\r\n    initialState:continents,\r\n    reducers:{\r\n        // Ajouter:function(state,action){\r\n        //     state.tbl.push(action.payload)\r\n        //  },\r\n         \r\n        //  Supremier:function(state,action){\r\n        //      state.tbl=state.tbl.filter((f)=>f.id!==parseInt(action.payload))\r\n        //  },\r\n\r\n        //  Update:function(state,action){\r\n        //     state.tbl.map(tbl=>{\r\n        //         if(tbl.id==action.payload.id){\r\n        //             tbl.nomP=action.payload.nomP;\r\n        //             tbl.prixP=action.payload.prixP;\r\n        //         }\r\n        //     })\r\n        //  }\r\n\r\n    }\r\n})\r\n//export const{Ajouter,Supremier,Update}=todoReducer.actions;\r\n\r\nconst store=configureStore({\r\n    reducer:{\r\n        table:todoReducer.reducer,\r\n    }\r\n})\r\nexport default store"],"mappings":"AAAA,SAASA,cAAT,EAAwBC,WAAxB,QAA2C,kBAA3C,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAG,CAAC;IACZC,IAAI,EAAE,IADM;IAEZC,IAAI,EAAE,QAFM;IAGZC,WAAW,EAAE,QAHD;IAIZC,UAAU,EAAE,UAJA;IAKZC,MAAM,EAAEC,EALI;IAMZC,IAAI,EAAE,CACJ;MACEL,IAAI,EAAE,OADR;MAEEE,UAAU,EAAE,QAFd;MAGEI,OAAO,EAAE,OAHX;MAIEC,SAAS,EAAE,IAJb;MAKEC,KAAK,EAAE;IALT,CADI;EANM,CAAD,EAgBb;IACET,IAAI,EAAE,IADR;IAEEC,IAAI,EAAE,WAFR;IAGEC,WAAW,EAAE,QAHf;IAIEC,UAAU,EAAE,SAJd;IAKEC,MAAM,EAAE,IALV;IAMEE,IAAI,EAAE,CACJ;MACEL,IAAI,EAAE,QADR;MAEEE,UAAU,EAAE,QAFd;MAGEI,OAAO,EAAE,QAHX;MAIEC,SAAS,EAAE,IAJb;MAKEC,KAAK,EAAE;IALT,CADI,EAQJ;MACER,IAAI,EAAE,MADR;MAEEE,UAAU,EAAE,QAFd;MAGEI,OAAO,EAAE,QAHX;MAIEC,SAAS,EAAE,IAJb;MAKEC,KAAK,EAAE;IALT,CARI;EANR,CAhBa,EAuCb;IACET,IAAI,EAAE,IADR;IAEEC,IAAI,EAAE,SAFR;IAGEC,WAAW,EAAE,QAHf;IAIEC,UAAU,EAAE,SAJd;IAKEC,MAAM,EAAE,IALV;IAMEE,IAAI,EAAE,CACJ;MACEL,IAAI,EAAE,QADR;MAEEE,UAAU,EAAE,QAFd;MAGEI,OAAO,EAAE,OAHX;MAIEC,SAAS,EAAE,IAJb;MAKEC,KAAK,EAAE;IALT,CADI;EANR,CAvCa,CADM;EAwDnBC,gBAAgB,EAAG;AAxDA,CAArB;AA4DA,MAAMC,WAAW,GAACd,WAAW,CAAC;EAC1BI,IAAI,EAAC,OADqB;EAE1BH,YAAY,EAACC,UAFa;EAG1Ba,QAAQ,EAAC,CACL;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAhBK;AAHiB,CAAD,CAA7B,C,CAuBA;;AAEA,MAAMC,KAAK,GAACjB,cAAc,CAAC;EACvBkB,OAAO,EAAC;IACJC,KAAK,EAACJ,WAAW,CAACG;EADd;AADe,CAAD,CAA1B;AAKA,eAAeD,KAAf"},"metadata":{},"sourceType":"module"}