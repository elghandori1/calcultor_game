{"ast":null,"code":"var _jsxFileName = \"D:\\\\etuds ofppt\\\\2_anne\\\\Devlop_frontend\\\\fahmReact\\\\pratiqueFhm\\\\src\\\\components\\\\Redux\\\\reducers\\\\Initialreducer.js\";\nimport initial from \"../../Datas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Initialreducer = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 9\n  }, this); // const Initialreducer=(state={val:initial},action)=>{\n  // return state\n  // switch(action.type){\n  //     case 'AJOUTERPAY':\n  //         return {...state,pays:[...state,action.payload]};\n  //     case 'MODIFIER_PUPLATION':\n  //         const pays=state.find((p)=>p.code=== parseInt(action.payload.code))\n  //         if(pays){\n  //             pays.name=action.payload.name\n  //             pays.SurfaceArea=action.payload.SurfaceArea\n  //             pays.Population=action.payload.Population\n  //         }\n  //         return state\n  //     case 'SUPREMIER_PUPLATION':\n  //         return {...state,pays:[...state.filter((f)=>f.code!==parseInt(action.payload))]};\n  //     default :\n  //         return state;\n  // }\n};\n\n_c = Initialreducer;\nexport default Initialreducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Initialreducer\");","map":{"version":3,"names":["initial","Initialreducer"],"sources":["D:/etuds ofppt/2_anne/Devlop_frontend/fahmReact/pratiqueFhm/src/components/Redux/reducers/Initialreducer.js"],"sourcesContent":["import initial from \"../../Datas\";\r\nconst Initialreducer=()=>{\r\n    return(\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n// const Initialreducer=(state={val:initial},action)=>{\r\n    // return state\r\n    // switch(action.type){\r\n    //     case 'AJOUTERPAY':\r\n    //         return {...state,pays:[...state,action.payload]};\r\n    //     case 'MODIFIER_PUPLATION':\r\n    //         const pays=state.find((p)=>p.code=== parseInt(action.payload.code))\r\n    //         if(pays){\r\n    //             pays.name=action.payload.name\r\n    //             pays.SurfaceArea=action.payload.SurfaceArea\r\n    //             pays.Population=action.payload.Population\r\n    //         }\r\n    //         return state\r\n    //     case 'SUPREMIER_PUPLATION':\r\n    //         return {...state,pays:[...state.filter((f)=>f.code!==parseInt(action.payload))]};\r\n    //     default :\r\n    //         return state;\r\n    // }\r\n}\r\nexport default Initialreducer"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,aAApB;;;AACA,MAAMC,cAAc,GAAC,MAAI;EACrB,oBACI;IAAA;IAAA;IAAA;EAAA,QADJ,CADqB,CAMzB;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACH,CAxBD;;KAAMA,c;AAyBN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}