{"ast":null,"code":"import { configureStoren, createSlice } from \"@reduxjs/toolkit\";\nconst initTab = {\n  tbl: []\n};\nconst todoReducer = createSlice({\n  name: 'table',\n  initialState: initTab,\n  reducers: {\n    Ajouter: state => {}\n  }\n});\nexport const InicialAction = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    val: elms\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'AJOUTER':\n      return { ...state,\n        val: [...state.val, action.payload]\n      };\n\n    case \"SUPREMIER\":\n      return { ...state,\n        val: [...state.val.filter(f => f.id !== parseInt(action.payload))]\n      };\n\n    default:\n      return state;\n  }\n}; // import { createSlice ,configureStore} from \"@reduxjs/toolkit\";\n// const initState={conter:10};\n// const counterReducer=createSlice({\n//     name:\"counter\",\n//     initialState:initState,\n//     reducers:{\n//         increment:(state)=>{\n//             state.conter=state.conter+1\n//         },\n//         decrement:(state)=>{\n//             state.conter=state.conter-1\n//         }\n//     }\n// })\n// export const{increment,decrement}=counterReducer.actions\n// const store=configureStore({\n//     reducer:{\n//         counter:counterReducer.reducer\n//     }\n// })\n// export default store\n\n_c = InicialAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"InicialAction\");","map":{"version":3,"names":["configureStoren","createSlice","initTab","tbl","todoReducer","name","initialState","reducers","Ajouter","state","InicialAction","val","elms","action","type","payload","filter","f","id","parseInt"],"sources":["D:/etuds ofppt/2_anne/Devlop_frontend/fahmReact/pratiqueFhm/src/components/store.js"],"sourcesContent":["import { configureStoren, createSlice} from \"@reduxjs/toolkit\";\r\nconst initTab={tbl:[]}\r\nconst todoReducer=createSlice({\r\n    name:'table',\r\n    initialState:initTab,\r\n    reducers:{\r\n        Ajouter:(state)=>{\r\n\r\n        }\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const InicialAction=(state={val:elms},action)=>{\r\n    switch(action.type){\r\n             case 'AJOUTER':\r\n                 return {...state,val:[...state.val,action.payload]};\r\n            case\"SUPREMIER\":\r\n                 return{...state,val:[...state.val.filter((f)=>f.id!==parseInt(action.payload))]}\r\n    default :\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n// import { createSlice ,configureStore} from \"@reduxjs/toolkit\";\r\n\r\n// const initState={conter:10};\r\n// const counterReducer=createSlice({\r\n//     name:\"counter\",\r\n//     initialState:initState,\r\n//     reducers:{\r\n//         increment:(state)=>{\r\n//             state.conter=state.conter+1\r\n//         },\r\n//         decrement:(state)=>{\r\n//             state.conter=state.conter-1\r\n//         }\r\n//     }\r\n// })\r\n\r\n// export const{increment,decrement}=counterReducer.actions\r\n\r\n// const store=configureStore({\r\n//     reducer:{\r\n//         counter:counterReducer.reducer\r\n//     }\r\n// })\r\n// export default store\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,MAAMC,OAAO,GAAC;EAACC,GAAG,EAAC;AAAL,CAAd;AACA,MAAMC,WAAW,GAACH,WAAW,CAAC;EAC1BI,IAAI,EAAC,OADqB;EAE1BC,YAAY,EAACJ,OAFa;EAG1BK,QAAQ,EAAC;IACLC,OAAO,EAAEC,KAAD,IAAS,CAEhB;EAHI;AAHiB,CAAD,CAA7B;AAYA,OAAO,MAAMC,aAAa,GAAC,YAA2B;EAAA,IAA1BD,KAA0B,uEAApB;IAACE,GAAG,EAACC;EAAL,CAAoB;EAAA,IAATC,MAAS;;EAClD,QAAOA,MAAM,CAACC,IAAd;IACS,KAAK,SAAL;MACI,OAAO,EAAC,GAAGL,KAAJ;QAAUE,GAAG,EAAC,CAAC,GAAGF,KAAK,CAACE,GAAV,EAAcE,MAAM,CAACE,OAArB;MAAd,CAAP;;IACL,KAAI,WAAJ;MACK,OAAM,EAAC,GAAGN,KAAJ;QAAUE,GAAG,EAAC,CAAC,GAAGF,KAAK,CAACE,GAAN,CAAUK,MAAV,CAAkBC,CAAD,IAAKA,CAAC,CAACC,EAAF,KAAOC,QAAQ,CAACN,MAAM,CAACE,OAAR,CAArC,CAAJ;MAAd,CAAN;;IACb;MACQ,OAAON,KAAP;EANR;AAQH,CATM,C,CAaP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;KApCaC,a"},"metadata":{},"sourceType":"module"}